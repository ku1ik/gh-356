;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name asciinema.player.js, :imports nil, :requires {clojure.set clojure.set, p asciinema.player.core, asciinema.player.core asciinema.player.core}, :uses {rename-keys clojure.set}, :defs {CreatePlayer {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/js.cljs", :line 5, :column 16, :end-line 5, :end-column 28, :export true, :arglists (quote ([dom-node url] [dom-node url options])), :doc "JavaScript API for creating the player.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([dom-node url] [dom-node url options]), :arglists ([dom-node url] [dom-node url options]), :arglists-meta (nil nil)}}, :name asciinema.player.js/CreatePlayer, :variadic false, :file "src/asciinema/player/js.cljs", :end-column 28, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([dom-node url] [dom-node url options]), :arglists ([dom-node url] [dom-node url options]), :arglists-meta (nil nil)}, :method-params ([dom-node url] [dom-node url options]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 3, :fn-var true, :arglists ([dom-node url] [dom-node url options]), :doc "JavaScript API for creating the player."}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:authorImgURL :font-size :start-at :author-img-url :snapshot :poster :auto-play :author-url :authorURL :autoPlay :fontSize :startAt :keywordize-keys}, :order [:keywordize-keys :autoPlay :fontSize :snapshot :authorURL :startAt :authorImgURL :auto-play :font-size :poster :author-url :start-at :author-img-url]}, :doc nil}