;; Analyzed by ClojureScript 1.7.170
{:use-macros {match cljs.core.match, events asciinema.player.macros}, :excludes #{print}, :name asciinema.player.vt, :imports nil, :requires {asciinema.player.util asciinema.player.util, s schema.core, schema.core schema.core, cljs.core.match cljs.core.match}, :uses {adjust-to-range asciinema.player.util}, :defs {feed-one {:schema (schema.core/->FnSchema output-schema28947 [input-schema28948]), :protocol-inline nil, :meta {:schema (schema.core/->FnSchema output-schema28947 [input-schema28948]), :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :column 9, :raw-arglists (quote ([vt :- VT input :- s/Num])), :line 890, :end-line 890, :tag VT, :arglists (quote ([vt input])), :doc "Inputs: [vt :- VT input :- s/Num]\n  Returns: VT"}, :name asciinema.player.vt/feed-one, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([G__28951 G__28952]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :raw-arglists (quote ([vt :- VT input :- s/Num])), :line 890, :ret-tag VT, :end-line 890, :max-fixed-arity 2, :tag VT, :fn-var true, :arglists (quote ([vt input])), :doc "Inputs: [vt :- VT input :- s/Num]\n  Returns: VT"}, execute-cud {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 382, :column 7, :end-line 382, :end-column 18, :arglists (quote ([{{y :y} :cursor, :keys [bottom-margin height], :as vt}]))}, :name asciinema.player.vt/execute-cud, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([p__28500]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 382, :end-line 382, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{y :y} :cursor, :keys [bottom-margin height], :as vt}]))}, normal-char-attrs {:name asciinema.player.vt/normal-char-attrs, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 79, :column 1, :end-line 79, :end-column 23, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 79, :column 6, :end-line 79, :end-column 23}}, move-cursor-to-prev-tab {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 289, :column 7, :end-line 289, :end-column 30, :arglists (quote ([{{:keys [x]} :cursor, :keys [tabs width], :as vt} n]))}, :name asciinema.player.vt/move-cursor-to-prev-tab, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 30, :method-params ([p__28438 n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 289, :end-line 289, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{{:keys [x]} :cursor, :keys [tabs width], :as vt} n]))}, execute-cnl {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 399, :column 7, :end-line 399, :end-column 18, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-cnl, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 399, :end-line 399, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, unhook {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 745, :column 7, :end-line 745, :end-column 13, :arglists (quote ([vt input]))}, :name asciinema.player.vt/unhook, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 13, :method-params ([vt input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 745, :end-line 745, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt input]))}, execute-decstbm {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 614, :column 7, :end-line 614, :end-column 22, :arglists (quote ([{:keys [height], :as vt}]))}, :name asciinema.player.vt/execute-decstbm, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 22, :method-params ([p__28874]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 614, :end-line 614, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [height], :as vt}]))}, put {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 742, :column 7, :end-line 742, :end-column 10, :arglists (quote ([vt input]))}, :name asciinema.player.vt/put, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 10, :method-params ([vt input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 742, :end-line 742, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt input]))}, execute-cha {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 409, :column 7, :end-line 409, :end-column 18, :arglists (quote ([{width :width, :as vt}]))}, :name asciinema.player.vt/execute-cha, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([p__28527]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 409, :end-line 409, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{width :width, :as vt}]))}, Charset {:name asciinema.player.vt/Charset, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 41, :column 1, :end-line 41, :end-column 13, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 41, :column 6, :end-line 41, :end-column 13}}, anywhere-state {:name asciinema.player.vt/anywhere-state, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 761, :column 1, :end-line 761, :end-column 20, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 761, :column 6, :end-line 761, :end-column 20}}, restore-cursor {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 243, :column 7, :end-line 243, :end-column 21, :arglists (quote ([{{:keys [cursor char-attrs origin-mode auto-wrap-mode]} :saved, :as vt}]))}, :name asciinema.player.vt/restore-cursor, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 21, :method-params ([p__28359]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 243, :end-line 243, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [cursor char-attrs origin-mode auto-wrap-mode]} :saved, :as vt}]))}, execute-hts {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 316, :column 7, :end-line 316, :end-column 18, :arglists (quote ([{{:keys [x]} :cursor, :keys [width], :as vt}]))}, :name asciinema.player.vt/execute-hts, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([p__28452]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 316, :end-line 316, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [x]} :cursor, :keys [width], :as vt}]))}, execute-rm {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 556, :column 7, :end-line 556, :end-column 17, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-rm, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 556, :end-line 556, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, execute-cr {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 298, :column 7, :end-line 298, :end-column 17, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-cr, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 298, :end-line 298, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, compact-line {:schema (schema.core/->FnSchema output-schema28991 [input-schema28992]), :protocol-inline nil, :meta {:arglists (quote ([line])), :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 910, :column 9, :end-line 910, :end-column 21, :schema (schema.core/->FnSchema output-schema28991 [input-schema28992]), :doc "Inputs: [line :- CellLine]\n  Returns: FragmentLine\n\n  Joins together all neighbouring cells having the same color attributes.", :raw-arglists (quote ([line :- CellLine]))}, :name asciinema.player.vt/compact-line, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 21, :method-params ([G__28995]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :raw-arglists (quote ([line :- CellLine])), :line 910, :end-line 910, :max-fixed-arity 1, :fn-var true, :arglists (quote ([line])), :doc "Inputs: [line :- CellLine]\n  Returns: FragmentLine\n\n  Joins together all neighbouring cells having the same color attributes."}, Tabs {:name asciinema.player.vt/Tabs, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 39, :column 1, :end-line 39, :end-column 10, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 39, :column 6, :end-line 39, :end-column 10}}, Cursor {:name asciinema.player.vt/Cursor, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 47, :column 1, :end-line 47, :end-column 12, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 47, :column 6, :end-line 47, :end-column 12}}, set-mode {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 251, :column 7, :end-line 251, :end-column 15, :arglists (quote ([vt intermediate param]))}, :name asciinema.player.vt/set-mode, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 15, :method-params ([vt intermediate param]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 251, :end-line 251, :max-fixed-arity 3, :fn-var true, :arglists (quote ([vt intermediate param]))}, scroll-down-lines {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 177, :column 7, :end-line 177, :end-column 24, :arglists (quote ([lines n filler]))}, :name asciinema.player.vt/scroll-down-lines, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 24, :method-params ([lines n filler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 177, :end-line 177, :max-fixed-arity 3, :fn-var true, :arglists (quote ([lines n filler]))}, execute-sd {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 485, :column 7, :end-line 485, :end-column 17, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-sd, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 485, :end-line 485, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, make-vt {:schema (schema.core/->FnSchema output-schema28273 [input-schema28274]), :protocol-inline nil, :meta {:schema (schema.core/->FnSchema output-schema28273 [input-schema28274]), :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 16, :column 9, :raw-arglists (quote ([width :- s/Num height :- s/Num])), :line 129, :end-line 129, :tag VT, :arglists (quote ([width height])), :doc "Inputs: [width :- s/Num height :- s/Num]\n  Returns: VT"}, :name asciinema.player.vt/make-vt, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 16, :method-params ([G__28277 G__28278]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :raw-arglists (quote ([width :- s/Num height :- s/Num])), :line 129, :ret-tag VT, :end-line 129, :max-fixed-arity 2, :tag VT, :fn-var true, :arglists (quote ([width height])), :doc "Inputs: [width :- s/Num height :- s/Num]\n  Returns: VT"}, execute-actions {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 887, :column 7, :end-line 887, :end-column 22, :arglists (quote ([vt actions input]))}, :name asciinema.player.vt/execute-actions, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 22, :method-params ([vt actions input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 887, :end-line 887, :max-fixed-arity 3, :fn-var true, :arglists (quote ([vt actions input]))}, cell {:schema (schema.core/->FnSchema output-schema28166 [input-schema28167]), :protocol-inline nil, :meta {:arglists (quote ([ch char-attrs])), :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 109, :column 9, :end-line 109, :end-column 13, :schema (schema.core/->FnSchema output-schema28166 [input-schema28167]), :doc "Inputs: [ch :- CodePoint char-attrs :- CharAttrs]\n  Returns: Cell", :raw-arglists (quote ([ch :- CodePoint char-attrs :- CharAttrs]))}, :name asciinema.player.vt/cell, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 13, :method-params ([G__28170 G__28171]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :raw-arglists (quote ([ch :- CodePoint char-attrs :- CharAttrs])), :line 109, :end-line 109, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ch char-attrs])), :doc "Inputs: [ch :- CodePoint char-attrs :- CharAttrs]\n  Returns: Cell"}, scroll-up {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 167, :column 7, :end-line 167, :end-column 16, :arglists (quote ([vt] [{:keys [width top-margin bottom-margin char-attrs], :as vt} n])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([vt] [{:keys [width top-margin bottom-margin char-attrs], :as vt} n]), :arglists ([vt] [{:keys [width top-margin bottom-margin char-attrs], :as vt} n]), :arglists-meta (nil nil)}}, :name asciinema.player.vt/scroll-up, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([vt] [{:keys [width top-margin bottom-margin char-attrs], :as vt} n]), :arglists ([vt] [{:keys [width top-margin bottom-margin char-attrs], :as vt} n]), :arglists-meta (nil nil)}, :method-params ([vt] [{:keys [width top-margin bottom-margin char-attrs], :as vt} n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 167, :max-fixed-arity 2, :fn-var true, :arglists ([vt] [{:keys [width top-margin bottom-margin char-attrs], :as vt} n])}, FragmentLine {:name asciinema.player.vt/FragmentLine, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 37, :column 1, :end-line 37, :end-column 18, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 37, :column 6, :end-line 37, :end-column 18}}, split-coll {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 335, :column 7, :end-line 335, :end-column 17, :arglists (quote ([elem coll]))}, :name asciinema.player.vt/split-coll, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([elem coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 335, :end-line 335, :max-fixed-arity 2, :fn-var true, :arglists (quote ([elem coll]))}, chars->string {:schema (schema.core/->FnSchema output-schema28975 [input-schema28976]), :protocol-inline nil, :meta {:arglists (quote ([chars])), :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 905, :column 9, :end-line 905, :end-column 22, :schema (schema.core/->FnSchema output-schema28975 [input-schema28976]), :doc "Inputs: [chars :- [CodePoint]]\n  Returns: s/Str", :raw-arglists (quote ([chars :- [CodePoint]]))}, :name asciinema.player.vt/chars->string, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 22, :method-params ([G__28979]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :raw-arglists (quote ([chars :- [CodePoint]])), :line 905, :end-line 905, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chars])), :doc "Inputs: [chars :- [CodePoint]]\n  Returns: s/Str"}, execute-cuf {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 389, :column 7, :end-line 389, :end-column 18, :arglists (quote ([{{x :x} :cursor, :keys [width], :as vt}]))}, :name asciinema.player.vt/execute-cuf, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([p__28509]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 389, :end-line 389, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{x :x} :cursor, :keys [width], :as vt}]))}, map->VT {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 56, :column 14, :end-line 56, :end-column 16, :internal-ctor true, :factory :map, :arglists (quote ([G__28136]))}, :name asciinema.player.vt/map->VT, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 16, :method-params ([G__28136]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__28136]))}, execute-sc {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 329, :column 7, :end-line 329, :end-column 17, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-sc, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 329, :end-line 329, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, CellLine {:name asciinema.player.vt/CellLine, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 33, :column 1, :end-line 33, :end-column 14, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 33, :column 6, :end-line 33, :end-column 14}}, unset-attr {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 566, :column 7, :end-line 566, :end-column 17, :arglists (quote ([vt attr-name]))}, :name asciinema.player.vt/unset-attr, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([vt attr-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 566, :end-line 566, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt attr-name]))}, get-param {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 362, :column 7, :end-line 362, :end-column 16, :arglists (quote ([vt n default]))}, :name asciinema.player.vt/get-param, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 16, :method-params ([vt n default]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 362, :end-line 362, :max-fixed-arity 3, :fn-var true, :arglists (quote ([vt n default]))}, Parser {:name asciinema.player.vt/Parser, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 43, :column 1, :end-line 43, :end-column 12, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 43, :column 6, :end-line 43, :end-column 12}}, clear {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 682, :column 7, :end-line 682, :end-column 12, :arglists (quote ([vt input]))}, :name asciinema.player.vt/clear, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 12, :method-params ([vt input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 682, :end-line 682, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt input]))}, execute-sgr {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 569, :column 7, :end-line 569, :end-column 18, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-sgr, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 569, :end-line 569, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, save-cursor {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 237, :column 7, :end-line 237, :end-column 18, :arglists (quote ([{{:keys [x y]} :cursor, :keys [char-attrs origin-mode auto-wrap-mode], :as vt}]))}, :name asciinema.player.vt/save-cursor, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([p__28350]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 237, :end-line 237, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [x y]} :cursor, :keys [char-attrs origin-mode auto-wrap-mode], :as vt}]))}, clear-to-end-of-screen {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 443, :column 7, :end-line 443, :end-column 29, :arglists (quote ([{{:keys [x y]} :cursor, :keys [width height char-attrs], :as vt}]))}, :name asciinema.player.vt/clear-to-end-of-screen, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 29, :method-params ([p__28547]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 443, :end-line 443, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [x y]} :cursor, :keys [width height char-attrs], :as vt}]))}, hook {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 739, :column 7, :end-line 739, :end-column 11, :arglists (quote ([vt input]))}, :name asciinema.player.vt/hook, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 11, :method-params ([vt input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 739, :end-line 739, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt input]))}, execute-il {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 489, :column 7, :end-line 489, :end-column 17, :arglists (quote ([{:keys [bottom-margin width height char-attrs], {y :y} :cursor, :as vt}]))}, :name asciinema.player.vt/execute-il, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([p__28591]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 489, :end-line 489, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [bottom-margin width height char-attrs], {y :y} :cursor, :as vt}]))}, execute-su {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 481, :column 7, :end-line 481, :end-column 17, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-su, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 481, :end-line 481, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, esc-dispatch {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 691, :column 7, :end-line 691, :end-column 19, :arglists (quote ([vt input]))}, :name asciinema.player.vt/esc-dispatch, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 19, :method-params ([vt input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 691, :end-line 691, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt input]))}, special-charset {:name asciinema.player.vt/special-charset, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 83, :column 1, :end-line 83, :end-column 21, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 83, :column 6, :end-line 83, :end-column 21}}, feed-str {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 901, :column 7, :end-line 901, :end-column 15, :arglists (quote ([vt str]))}, :name asciinema.player.vt/feed-str, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 15, :method-params ([vt str]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 901, :end-line 901, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt str]))}, show-cursor {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 153, :column 7, :end-line 153, :end-column 18, :arglists (quote ([vt] [vt show?])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([vt] [vt show?]), :arglists ([vt] [vt show?]), :arglists-meta (nil nil)}}, :name asciinema.player.vt/show-cursor, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([vt] [vt show?]), :arglists ([vt] [vt show?]), :arglists-meta (nil nil)}, :method-params ([vt] [vt show?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 2, :fn-var true, :arglists ([vt] [vt show?])}, osc-end {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 754, :column 7, :end-line 754, :end-column 14, :arglists (quote ([vt input]))}, :name asciinema.player.vt/osc-end, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 14, :method-params ([vt input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 754, :end-line 754, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt input]))}, wrap {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 637, :column 7, :end-line 637, :end-column 11, :arglists (quote ([{{:keys [y]} :cursor, :keys [height], :as vt}]))}, :name asciinema.player.vt/wrap, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 11, :method-params ([p__28879]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 637, :end-line 637, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [y]} :cursor, :keys [height], :as vt}]))}, space {:name asciinema.player.vt/space, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 77, :column 1, :end-line 77, :end-column 11, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 77, :column 6, :end-line 77, :end-column 11}}, feed {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 898, :column 7, :end-line 898, :end-column 11, :arglists (quote ([vt inputs]))}, :name asciinema.player.vt/feed, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 11, :method-params ([vt inputs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 898, :end-line 898, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt inputs]))}, osc-put {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 751, :column 7, :end-line 751, :end-column 14, :arglists (quote ([vt input]))}, :name asciinema.player.vt/osc-put, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 14, :method-params ([vt input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 751, :end-line 751, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt input]))}, Fragment {:name asciinema.player.vt/Fragment, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 35, :column 1, :end-line 35, :end-column 14, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 35, :column 6, :end-line 35, :end-column 14}}, execute-vpa {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 598, :column 7, :end-line 598, :end-column 18, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-vpa, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 598, :end-line 598, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, empty-screen {:schema (schema.core/make-fn-schema output-schema28235 [input-schema28236 input-schema28241]), :protocol-inline nil, :meta {:schema (schema.core/make-fn-schema output-schema28235 [input-schema28236 input-schema28241]), :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([G__28239 G__28240] [G__28244 G__28245 G__28246]), :arglists ([G__28239 G__28240] [G__28244 G__28245 G__28246]), :arglists-meta (nil nil)}, :column 9, :raw-arglists (quote ([width height] [width height char-attrs])), :line 123, :end-line 123, :arglists (quote ([width height] [width height char-attrs])), :doc "Inputs: ([width height] [width height char-attrs])\n  Returns: [CellLine]"}, :name asciinema.player.vt/empty-screen, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([G__28239 G__28240] [G__28244 G__28245 G__28246]), :arglists ([G__28239 G__28240] [G__28244 G__28245 G__28246]), :arglists-meta (nil nil)}, :method-params ([G__28239 G__28240] [G__28244 G__28245 G__28246]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :raw-arglists (quote ([width height] [width height char-attrs])), :line 123, :end-line 123, :max-fixed-arity 3, :fn-var true, :arglists ([G__28239 G__28240] [G__28244 G__28245 G__28246]), :doc "Inputs: ([width height] [width height char-attrs])\n  Returns: [CellLine]"}, move-cursor-down {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 211, :column 7, :end-line 211, :end-column 23, :arglists (quote ([{:keys [bottom-margin height], {y :y} :cursor, :as vt}]))}, :name asciinema.player.vt/move-cursor-down, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 23, :method-params ([p__28331]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 211, :end-line 211, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [bottom-margin height], {y :y} :cursor, :as vt}]))}, execute-ed {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 464, :column 7, :end-line 464, :end-column 17, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-ed, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 464, :end-line 464, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, states {:name asciinema.player.vt/states, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 769, :column 1, :end-line 769, :end-column 12, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 769, :column 6, :end-line 769, :end-column 12}}, set-attr {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 563, :column 7, :end-line 563, :end-column 15, :arglists (quote ([vt attr-name value]))}, :name asciinema.player.vt/set-attr, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 15, :method-params ([vt attr-name value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 563, :end-line 563, :max-fixed-arity 3, :fn-var true, :arglists (quote ([vt attr-name value]))}, default-tabs {:schema (schema.core/->FnSchema output-schema28150 [input-schema28151]), :protocol-inline nil, :meta {:arglists (quote ([width])), :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 105, :column 9, :end-line 105, :end-column 21, :schema (schema.core/->FnSchema output-schema28150 [input-schema28151]), :doc "Inputs: [width]\n  Returns: Tabs", :raw-arglists (quote ([width]))}, :name asciinema.player.vt/default-tabs, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 21, :method-params ([G__28154]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :raw-arglists (quote ([width])), :line 105, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([width])), :doc "Inputs: [width]\n  Returns: Tabs"}, clear-to-beginning-of-screen {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 454, :column 7, :end-line 454, :end-column 35, :arglists (quote ([{{:keys [x y]} :cursor, :keys [width height char-attrs], :as vt}]))}, :name asciinema.player.vt/clear-to-beginning-of-screen, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 35, :method-params ([p__28556]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 454, :end-line 454, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [x y]} :cursor, :keys [width height char-attrs], :as vt}]))}, strict-map->VT {:protocol-inline nil, :meta {:arglists (quote ([m28133 & [drop-extra-keys?__240__auto__]])), :doc "Factory function for class VT, taking a map of keywords to field values.  All keys are required, and no extra keys are allowed.  Even faster than map->", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m28133 [drop-extra-keys?__240__auto__])], :arglists ([m28133 & [drop-extra-keys?__240__auto__]]), :arglists-meta (nil)}, :file nil}, :name asciinema.player.vt/strict-map->VT, :variadic true, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m28133 [drop-extra-keys?__240__auto__])], :arglists ([m28133 & [drop-extra-keys?__240__auto__]]), :arglists-meta (nil)}, :method-params [(m28133 [drop-extra-keys?__240__auto__])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 56, :max-fixed-arity 1, :fn-var true, :arglists ([m28133 & [drop-extra-keys?__240__auto__]]), :doc "Factory function for class VT, taking a map of keywords to field values.  All keys are required, and no extra keys are allowed.  Even faster than map->"}, execute-ht {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 295, :column 7, :end-line 295, :end-column 17, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-ht, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 295, :end-line 295, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, scroll-up-lines {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 161, :column 7, :end-line 161, :end-column 22, :arglists (quote ([lines n filler]))}, :name asciinema.player.vt/scroll-up-lines, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 22, :method-params ([lines n filler]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 3, :fn-var true, :arglists (quote ([lines n filler]))}, reset-attrs {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 560, :column 7, :end-line 560, :end-column 18, :arglists (quote ([vt]))}, :name asciinema.player.vt/reset-attrs, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 560, :end-line 560, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, initial-cursor {:name asciinema.player.vt/initial-cursor, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 96, :column 1, :end-line 96, :end-column 20, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 96, :column 6, :end-line 96, :end-column 20}}, bottom-limit {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 417, :column 7, :end-line 417, :end-column 19, :arglists (quote ([{:keys [origin-mode bottom-margin height], :as vt}]))}, :name asciinema.player.vt/bottom-limit, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 19, :method-params ([p__28537]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 417, :end-line 417, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [origin-mode bottom-margin height], :as vt}]))}, move-cursor-to-next-tab {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 282, :column 7, :end-line 282, :end-column 30, :arglists (quote ([{{:keys [x]} :cursor, :keys [tabs width], :as vt} n]))}, :name asciinema.player.vt/move-cursor-to-next-tab, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 30, :method-params ([p__28429 n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 282, :end-line 282, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{{:keys [x]} :cursor, :keys [tabs width], :as vt} n]))}, execute-cup {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 425, :column 7, :end-line 425, :end-column 18, :arglists (quote ([{:keys [width height], :as vt}]))}, :name asciinema.player.vt/execute-cup, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([p__28542]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 425, :end-line 425, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [width height], :as vt}]))}, execute-decstr {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 603, :column 7, :end-line 603, :end-column 21, :arglists (quote ([{:keys [height], :as vt}]))}, :name asciinema.player.vt/execute-decstr, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 21, :method-params ([p__28869]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 603, :end-line 603, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [height], :as vt}]))}, move-cursor-to-col {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 194, :column 7, :end-line 194, :end-column 25, :arglists (quote ([vt x]))}, :name asciinema.player.vt/move-cursor-to-col, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 25, :method-params ([vt x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt x]))}, adjust-y-to-limits {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 420, :column 7, :end-line 420, :end-column 25, :arglists (quote ([vt y]))}, :name asciinema.player.vt/adjust-y-to-limits, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 25, :method-params ([vt y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 420, :end-line 420, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt y]))}, replace-char {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 628, :column 7, :end-line 628, :end-column 19, :arglists (quote ([line x cell]))}, :name asciinema.player.vt/replace-char, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 19, :method-params ([line x cell]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 628, :end-line 628, :max-fixed-arity 3, :fn-var true, :arglists (quote ([line x cell]))}, execute-tbc {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 545, :column 7, :end-line 545, :end-column 18, :arglists (quote ([{{:keys [x]} :cursor, :as vt}]))}, :name asciinema.player.vt/execute-tbc, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([p__28642]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 545, :end-line 545, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [x]} :cursor, :as vt}]))}, do-print {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 643, :column 7, :end-line 643, :end-column 15, :arglists (quote ([{:keys [width height char-attrs auto-wrap-mode insert-mode charset-fn], {:keys [x y]} :cursor, :as vt} input]))}, :name asciinema.player.vt/do-print, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 15, :method-params ([p__28888 input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 643, :end-line 643, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [width height char-attrs auto-wrap-mode insert-mode charset-fn], {:keys [x y]} :cursor, :as vt} input]))}, VT {:num-fields 19, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name asciinema.player.vt/VT, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 16, :type true, :column 14, :internal-ctor true, :line 56, :record true, :end-line 56, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, execute-cuu {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 375, :column 7, :end-line 375, :end-column 18, :arglists (quote ([{:keys [top-margin], {:keys [y]} :cursor, :as vt}]))}, :name asciinema.player.vt/execute-cuu, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([p__28491]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 375, :end-line 375, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [top-margin], {:keys [y]} :cursor, :as vt}]))}, empty-cell {:schema (schema.core/->FnSchema output-schema28183 [input-schema28184]), :protocol-inline nil, :meta {:arglists (quote ([char-attrs])), :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 114, :column 9, :end-line 114, :end-column 19, :schema (schema.core/->FnSchema output-schema28183 [input-schema28184]), :doc "Inputs: [char-attrs]\n  Returns: Cell", :raw-arglists (quote ([char-attrs]))}, :name asciinema.player.vt/empty-cell, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 19, :method-params ([G__28187]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :raw-arglists (quote ([char-attrs])), :line 114, :end-line 114, :max-fixed-arity 1, :fn-var true, :arglists (quote ([char-attrs])), :doc "Inputs: [char-attrs]\n  Returns: Cell"}, execute-cub {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 394, :column 7, :end-line 394, :end-column 18, :arglists (quote ([{{x :x} :cursor, :keys [width], :as vt}]))}, :name asciinema.player.vt/execute-cub, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([p__28518]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 394, :end-line 394, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{x :x} :cursor, :keys [width], :as vt}]))}, execute-ctc {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 525, :column 7, :end-line 525, :end-column 18, :arglists (quote ([{{:keys [x]} :cursor, :keys [width], :as vt}]))}, :name asciinema.player.vt/execute-ctc, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([p__28618]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 525, :end-line 525, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [x]} :cursor, :keys [width], :as vt}]))}, execute {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 664, :column 7, :end-line 664, :end-column 14, :arglists (quote ([vt input]))}, :name asciinema.player.vt/execute, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 14, :method-params ([vt input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 664, :end-line 664, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt input]))}, get-params {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 359, :column 7, :end-line 359, :end-column 17, :arglists (quote ([vt]))}, :name asciinema.player.vt/get-params, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 359, :end-line 359, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, empty-line {:schema (schema.core/make-fn-schema output-schema28199 [input-schema28200 input-schema28204]), :protocol-inline nil, :meta {:schema (schema.core/make-fn-schema output-schema28199 [input-schema28200 input-schema28204]), :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([G__28203] [G__28207 G__28208]), :arglists ([G__28203] [G__28207 G__28208]), :arglists-meta (nil nil)}, :column 9, :raw-arglists (quote ([width] [width char-attrs])), :line 118, :end-line 118, :arglists (quote ([width] [width char-attrs])), :doc "Inputs: ([width] [width char-attrs])\n  Returns: CellLine"}, :name asciinema.player.vt/empty-line, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([G__28203] [G__28207 G__28208]), :arglists ([G__28203] [G__28207 G__28208]), :arglists-meta (nil nil)}, :method-params ([G__28203] [G__28207 G__28208]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :raw-arglists (quote ([width] [width char-attrs])), :line 118, :end-line 118, :max-fixed-arity 2, :fn-var true, :arglists ([G__28203] [G__28207 G__28208]), :doc "Inputs: ([width] [width char-attrs])\n  Returns: CellLine"}, get-cached-params {:name asciinema.player.vt/get-cached-params, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 355, :column 1, :end-line 355, :end-column 23, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 355, :column 6, :end-line 355, :end-column 23}}, SavedCursor {:name asciinema.player.vt/SavedCursor, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 51, :column 1, :end-line 51, :end-column 17, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 51, :column 6, :end-line 51, :end-column 17}}, execute-si {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 310, :column 7, :end-line 310, :end-column 17, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-si, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 310, :end-line 310, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, print {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 659, :column 7, :end-line 659, :end-column 12, :arglists (quote ([{:keys [auto-wrap-mode next-print-wraps], :as vt} input]))}, :name asciinema.player.vt/print, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 12, :method-params ([p__28897 input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 659, :end-line 659, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [auto-wrap-mode next-print-wraps], :as vt} input]))}, execute-ich {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 368, :column 7, :end-line 368, :end-column 18, :arglists (quote ([{{:keys [x y]} :cursor, :keys [width char-attrs], :as vt}]))}, :name asciinema.player.vt/execute-ich, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([p__28482]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 368, :end-line 368, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [x y]} :cursor, :keys [width char-attrs], :as vt}]))}, reset-mode {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 264, :column 7, :end-line 264, :end-column 17, :arglists (quote ([vt intermediate param]))}, :name asciinema.player.vt/reset-mode, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([vt intermediate param]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 264, :end-line 264, :max-fixed-arity 3, :fn-var true, :arglists (quote ([vt intermediate param]))}, execute-so {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 307, :column 7, :end-line 307, :end-column 17, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-so, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 307, :end-line 307, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, execute-dch {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 515, :column 7, :end-line 515, :end-column 18, :arglists (quote ([{{:keys [x y]} :cursor, :keys [width char-attrs], :as vt}]))}, :name asciinema.player.vt/execute-dch, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([p__28609]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 515, :end-line 515, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [x y]} :cursor, :keys [width char-attrs], :as vt}]))}, csi-dispatch {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 702, :column 7, :end-line 702, :end-column 19, :arglists (quote ([vt input]))}, :name asciinema.player.vt/csi-dispatch, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 19, :method-params ([vt input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 702, :end-line 702, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt input]))}, c0-prime? {:name asciinema.player.vt/c0-prime?, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 759, :column 1, :end-line 759, :end-column 15, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 759, :column 6, :end-line 759, :end-column 15}}, ignore {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 625, :column 7, :end-line 625, :end-column 13, :arglists (quote ([vt input]))}, :name asciinema.player.vt/ignore, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 13, :method-params ([vt input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 625, :end-line 625, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt input]))}, switch-to-primary-buffer {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 227, :column 7, :end-line 227, :end-column 31, :arglists (quote ([{:keys [buffer], :as vt}]))}, :name asciinema.player.vt/switch-to-primary-buffer, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 31, :method-params ([p__28345]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 227, :end-line 227, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [buffer], :as vt}]))}, param {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 688, :column 7, :end-line 688, :end-column 12, :arglists (quote ([vt input]))}, :name asciinema.player.vt/param, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 12, :method-params ([vt input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 688, :end-line 688, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt input]))}, CodePoint {:name asciinema.player.vt/CodePoint, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 21, :column 1, :end-line 21, :end-column 15, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 21, :column 6, :end-line 21, :end-column 15}}, initial-parser {:name asciinema.player.vt/initial-parser, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 92, :column 1, :end-line 92, :end-column 20, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 92, :column 6, :end-line 92, :end-column 20}}, reduce-param {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 347, :column 7, :end-line 347, :end-column 19, :arglists (quote ([chars]))}, :name asciinema.player.vt/reduce-param, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 19, :method-params ([chars]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 347, :end-line 347, :max-fixed-arity 1, :fn-var true, :arglists (quote ([chars]))}, execute-cht {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 435, :column 7, :end-line 435, :end-column 18, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-cht, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 435, :end-line 435, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, clear-screen {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 461, :column 7, :end-line 461, :end-column 19, :arglists (quote ([{:keys [width height char-attrs], :as vt}]))}, :name asciinema.player.vt/clear-screen, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 19, :method-params ([p__28565]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 461, :end-line 461, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [width height char-attrs], :as vt}]))}, compact-lines {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 924, :column 7, :end-line 924, :end-column 20, :arglists (quote ([lines]))}, :name asciinema.player.vt/compact-lines, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 20, :method-params ([lines]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 924, :end-line 924, :max-fixed-arity 1, :fn-var true, :arglists (quote ([lines]))}, top-limit {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 414, :column 7, :end-line 414, :end-column 16, :arglists (quote ([{:keys [origin-mode top-margin], :as vt}]))}, :name asciinema.player.vt/top-limit, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 16, :method-params ([p__28532]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 414, :end-line 414, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [origin-mode top-margin], :as vt}]))}, execute-bs {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 279, :column 7, :end-line 279, :end-column 17, :arglists (quote ([{{:keys [x]} :cursor, :as vt}]))}, :name asciinema.player.vt/execute-bs, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([p__28420]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 279, :end-line 279, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [x]} :cursor, :as vt}]))}, execute-nel {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 313, :column 7, :end-line 313, :end-column 18, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-nel, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 313, :end-line 313, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, osc-start {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 748, :column 7, :end-line 748, :end-column 16, :arglists (quote ([vt input]))}, :name asciinema.player.vt/osc-start, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 16, :method-params ([vt input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 748, :end-line 748, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt input]))}, Cell {:name asciinema.player.vt/Cell, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 31, :column 1, :end-line 31, :end-column 10, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 31, :column 6, :end-line 31, :end-column 10}}, CharAttrs {:name asciinema.player.vt/CharAttrs, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 23, :column 1, :end-line 23, :end-column 15, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 23, :column 6, :end-line 23, :end-column 15}}, execute-rc {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 332, :column 7, :end-line 332, :end-column 17, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-rc, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 332, :end-line 332, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, collect {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 685, :column 7, :end-line 685, :end-column 14, :arglists (quote ([vt input]))}, :name asciinema.player.vt/collect, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 14, :method-params ([vt input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 685, :end-line 685, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt input]))}, get-transition {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 871, :column 8, :end-line 871, :end-column 22, :private true, :arglists (quote ([rules input]))}, :private true, :name asciinema.player.vt/get-transition, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 22, :method-params ([rules input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 871, :end-line 871, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rules input]))}, parse {:name asciinema.player.vt/parse, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 874, :column 1, :end-line 874, :end-column 11, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 874, :column 6, :end-line 874, :end-column 11}}, execute-ech {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 533, :column 7, :end-line 533, :end-column 18, :arglists (quote ([{{:keys [x y]} :cursor, :keys [width char-attrs], :as vt}]))}, :name asciinema.player.vt/execute-ech, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([p__28633]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 533, :end-line 533, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{{:keys [x y]} :cursor, :keys [width char-attrs], :as vt}]))}, set-margin {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 158, :column 7, :end-line 158, :end-column 17, :arglists (quote ([vt top bottom]))}, :name asciinema.player.vt/set-margin, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([vt top bottom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 3, :fn-var true, :arglists (quote ([vt top bottom]))}, switch-to-alternate-buffer {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 217, :column 7, :end-line 217, :end-column 33, :arglists (quote ([{:keys [buffer width height char-attrs], :as vt}]))}, :name asciinema.player.vt/switch-to-alternate-buffer, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 33, :method-params ([p__28340]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 217, :end-line 217, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [buffer width height char-attrs], :as vt}]))}, get-intermediate {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 352, :column 7, :end-line 352, :end-column 23, :arglists (quote ([vt n]))}, :name asciinema.player.vt/get-intermediate, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 23, :method-params ([vt n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 352, :end-line 352, :max-fixed-arity 2, :fn-var true, :arglists (quote ([vt n]))}, execute-sm {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 552, :column 7, :end-line 552, :end-column 17, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-sm, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 552, :end-line 552, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, execute-cpl {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 404, :column 7, :end-line 404, :end-column 18, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-cpl, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 404, :end-line 404, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, default-charset {:name asciinema.player.vt/default-charset, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 81, :column 1, :end-line 81, :end-column 21, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 81, :column 6, :end-line 81, :end-column 21}}, scroll-down {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 184, :column 7, :end-line 184, :end-column 18, :arglists (quote ([vt] [{:keys [width top-margin bottom-margin char-attrs], :as vt} n])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([vt] [{:keys [width top-margin bottom-margin char-attrs], :as vt} n]), :arglists ([vt] [{:keys [width top-margin bottom-margin char-attrs], :as vt} n]), :arglists-meta (nil nil)}}, :name asciinema.player.vt/scroll-down, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([vt] [{:keys [width top-margin bottom-margin char-attrs], :as vt} n]), :arglists ([vt] [{:keys [width top-margin bottom-margin char-attrs], :as vt} n]), :arglists-meta (nil nil)}, :method-params ([vt] [{:keys [width top-margin bottom-margin char-attrs], :as vt} n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 184, :end-line 184, :max-fixed-arity 2, :fn-var true, :arglists ([vt] [{:keys [width top-margin bottom-margin char-attrs], :as vt} n])}, execute-el {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 472, :column 7, :end-line 472, :end-column 17, :arglists (quote ([{:keys [width height char-attrs], {:keys [x y]} :cursor, :as vt}]))}, :name asciinema.player.vt/execute-el, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([p__28576]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 472, :end-line 472, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [width height char-attrs], {:keys [x y]} :cursor, :as vt}]))}, execute-dl {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 502, :column 7, :end-line 502, :end-column 17, :arglists (quote ([{:keys [bottom-margin width height char-attrs], {y :y} :cursor, :as vt}]))}, :name asciinema.player.vt/execute-dl, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([p__28600]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 502, :end-line 502, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [bottom-margin width height char-attrs], {y :y} :cursor, :as vt}]))}, execute-cbt {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 541, :column 7, :end-line 541, :end-column 18, :arglists (quote ([vt]))}, :name asciinema.player.vt/execute-cbt, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([vt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 541, :end-line 541, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vt]))}, ->VT {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 56, :column 14, :end-line 56, :end-column 16, :internal-ctor true, :factory :positional, :arglists (quote ([width height top-margin bottom-margin parser tabs cursor char-attrs charset-fn insert-mode auto-wrap-mode new-line-mode next-print-wraps origin-mode buffer lines saved other-buffer-lines other-buffer-saved]))}, :name asciinema.player.vt/->VT, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 16, :method-params ([width height top-margin bottom-margin parser tabs cursor char-attrs charset-fn insert-mode auto-wrap-mode new-line-mode next-print-wraps origin-mode buffer lines saved other-buffer-lines other-buffer-saved]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 56, :end-line 56, :max-fixed-arity 19, :fn-var true, :arglists (quote ([width height top-margin bottom-margin parser tabs cursor char-attrs charset-fn insert-mode auto-wrap-mode new-line-mode next-print-wraps origin-mode buffer lines saved other-buffer-lines other-buffer-saved]))}, insert-char {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 631, :column 7, :end-line 631, :end-column 18, :arglists (quote ([line x cell]))}, :name asciinema.player.vt/insert-char, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 18, :method-params ([line x cell]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 631, :end-line 631, :max-fixed-arity 3, :fn-var true, :arglists (quote ([line x cell]))}, move-cursor-to-home {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 205, :column 7, :end-line 205, :end-column 26, :arglists (quote ([{:keys [origin-mode top-margin], :as vt}]))}, :name asciinema.player.vt/move-cursor-to-home, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 26, :method-params ([p__28326]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 205, :end-line 205, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [origin-mode top-margin], :as vt}]))}, execute-ri {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 321, :column 7, :end-line 321, :end-column 17, :arglists (quote ([{:keys [top-margin], {y :y} :cursor, :as vt}]))}, :name asciinema.player.vt/execute-ri, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([p__28461]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 321, :end-line 321, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [top-margin], {y :y} :cursor, :as vt}]))}, clear-line-left {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 450, :column 7, :end-line 450, :end-column 22, :arglists (quote ([line x char-attrs]))}, :name asciinema.player.vt/clear-line-left, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 22, :method-params ([line x char-attrs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 450, :end-line 450, :max-fixed-arity 3, :fn-var true, :arglists (quote ([line x char-attrs]))}, clear-line-right {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 439, :column 7, :end-line 439, :end-column 23, :arglists (quote ([line x char-attrs]))}, :name asciinema.player.vt/clear-line-right, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 23, :method-params ([line x char-attrs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 439, :end-line 439, :max-fixed-arity 3, :fn-var true, :arglists (quote ([line x char-attrs]))}, move-cursor-to-row {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 199, :column 7, :end-line 199, :end-column 25, :arglists (quote ([{:keys [width], {:keys [x]} :cursor, :as vt} y]))}, :name asciinema.player.vt/move-cursor-to-row, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 25, :method-params ([p__28317 y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 199, :end-line 199, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [width], {:keys [x]} :cursor, :as vt} y]))}, initial-saved-cursor {:name asciinema.player.vt/initial-saved-cursor, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 100, :column 1, :end-line 100, :end-column 26, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 100, :column 6, :end-line 100, :end-column 26}}, execute-decaln {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 326, :column 7, :end-line 326, :end-column 21, :arglists (quote ([{:keys [width height], :as vt}]))}, :name asciinema.player.vt/execute-decaln, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 21, :method-params ([p__28470]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 326, :end-line 326, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [width height], :as vt}]))}, execute-lf {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :line 301, :column 7, :end-line 301, :end-column 17, :arglists (quote ([{:keys [new-line-mode], :as vt}]))}, :name asciinema.player.vt/execute-lf, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/vt.cljc", :end-column 17, :method-params ([p__28447]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 301, :end-line 301, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [new-line-mode], :as vt}]))}}, :require-macros {asciinema.player.macros asciinema.player.macros, s schema.core, schema.core schema.core, cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{s/Keyword :y feed-one :dcs-param input :escape schema.core/Any :bold :schema :char-attrs :auto-wrap-mode top-margin Charset other-buffer-lines compact-line s/Str Tabs :bottom-margin Cursor make-vt cell vt :blink :primary FragmentLine chars->string :schema.core/error :param-chars height CellLine buffer :else Parser :tabs :ground :next-print-wraps :transition char-attrs :dcs-passthrough :csi-param auto-wrap-mode :inverse :fg :dcs-intermediate :osc-string :on-enter :extra-validator-fn :value bottom-margin empty-screen :width :lines :sos-pm-apc-string :cursor :dcs-entry :type :alternate tabs :state next-print-wraps default-tabs :on-exit :csi-entry :underline :insert-mode :charset-fn :escape-intermediate :new-line-mode VT :csi-intermediate s/Bool :other-buffer-saved :parser empty-cell width lines :csi-ignore cursor empty-line SavedCursor :saved :intermediate-chars insert-mode ch CodePoint charset-fn :action :error s/maybe new-line-mode :origin-mode :x other-buffer-saved :tag parser Cell CharAttrs :top-margin chars line :visible saved :bg :other-buffer-lines :doc :italic :dcs-ignore :buffer :height s/Num origin-mode}, :order [:fg :bg :bold :italic :underline :blink :inverse :state :intermediate-chars :param-chars :x :y :visible :cursor :char-attrs :origin-mode :auto-wrap-mode :width :height :top-margin :bottom-margin :parser :tabs :charset-fn :insert-mode :new-line-mode :next-print-wraps :buffer :lines :saved :other-buffer-lines :other-buffer-saved width :schema s/Num height top-margin bottom-margin parser Parser tabs Tabs cursor Cursor char-attrs CharAttrs charset-fn Charset insert-mode s/Bool auto-wrap-mode new-line-mode next-print-wraps origin-mode buffer s/Keyword lines CellLine saved SavedCursor other-buffer-lines s/maybe other-buffer-saved :extra-validator-fn :ground schema.core/Any default-tabs :type :value :error :schema.core/error ch CodePoint cell Cell empty-cell empty-line empty-screen make-vt :tag VT :primary :else :alternate :action :transition :escape :sos-pm-apc-string :dcs-entry :osc-string :csi-entry :dcs-param :dcs-passthrough :csi-param :dcs-intermediate :escape-intermediate :csi-intermediate :csi-ignore :dcs-ignore :on-enter :on-exit vt input feed-one chars chars->string s/Str line compact-line :doc FragmentLine]}, :doc nil}