;; Analyzed by ClojureScript 1.7.170
{:use-macros {go-loop cljs.core.async.macros}, :excludes #{}, :name asciinema.player.core, :imports nil, :requires {reagent reagent.core, vt asciinema.player.vt, view asciinema.player.view, reagent.core reagent.core, asciinema.player.raf asciinema.player.raf, cljs.core.async cljs.core.async, util asciinema.player.util, source asciinema.player.source, asciinema.player.util asciinema.player.util, asciinema.player.source asciinema.player.source, str clojure.string, asciinema.player.view asciinema.player.view, clojure.string clojure.string, asciinema.player.vt asciinema.player.vt, raf asciinema.player.raf}, :uses {timeout cljs.core.async, make-source asciinema.player.source, atom reagent.core, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, dropping-buffer cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {stop-blinking {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 96, :column 7, :end-line 96, :end-column 20, :arglists (quote ([{:keys [cursor-blink-ch], :as player}]))}, :name asciinema.player.core/stop-blinking, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 20, :method-params ([p__30980]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [cursor-blink-ch], :as player}]))}, activity-chan {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 223, :column 7, :end-line 223, :end-column 20, :arglists (quote ([input msec])), :doc "Converts given channel into an activity indicator channel. The resulting\n  channel emits false when there are no reads on input channel within msec, then\n  true when new values show up on input, then false again after msec without\n  reads on input, and so on."}, :name asciinema.player.core/activity-chan, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 20, :method-params ([input msec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 223, :end-line 223, :max-fixed-arity 2, :fn-var true, :arglists (quote ([input msec])), :doc "Converts given channel into an activity indicator channel. The resulting\n  channel emits false when there are no reads on input channel within msec, then\n  true when new values show up on input, then false again after msec without\n  reads on input, and so on."}, restart-blinking {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 102, :column 7, :end-line 102, :end-column 23, :arglists (quote ([{:keys [cursor-blink-ch], :as player}]))}, :name asciinema.player.core/restart-blinking, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 23, :method-params ([p__30985]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [cursor-blink-ch], :as player}]))}, handle-duration {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 188, :column 7, :end-line 188, :end-column 22, :arglists (quote ([player [d]])), :doc "Sets the total playback time."}, :name asciinema.player.core/handle-duration, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 22, :method-params ([player p__31036]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 188, :end-line 188, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player [d]])), :doc "Sets the total playback time."}, handle-toggle-play {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 109, :column 7, :end-line 109, :end-column 25, :arglists (quote ([{:keys [source], :as player}])), :doc "Toggles the playback on the source."}, :name asciinema.player.core/handle-toggle-play, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 25, :method-params ([p__30990]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 109, :end-line 109, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [source], :as player}])), :doc "Toggles the playback on the source."}, parse-npt {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 12, :column 7, :end-line 12, :end-column 16, :arglists (quote ([t]))}, :name asciinema.player.core/parse-npt, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 16, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, mount-player-with-ratom {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 265, :column 7, :end-line 265, :end-column 30, :arglists (quote ([player-atom dom-node])), :doc "Mounts player's Reagent component in DOM and starts event loop."}, :name asciinema.player.core/mount-player-with-ratom, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 30, :method-params ([player-atom dom-node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 265, :end-line 265, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player-atom dom-node])), :doc "Mounts player's Reagent component in DOM and starts event loop."}, speed-up {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 144, :column 7, :end-line 144, :end-column 15, :arglists (quote ([speed]))}, :name asciinema.player.core/speed-up, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 15, :method-params ([speed]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 144, :end-line 144, :max-fixed-arity 1, :fn-var true, :arglists (quote ([speed]))}, handle-seek {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 115, :column 7, :end-line 115, :end-column 18, :arglists (quote ([{:keys [duration source], :as player} [position]])), :doc "Jumps to a given position (in seconds)."}, :name asciinema.player.core/handle-seek, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 18, :method-params ([p__30995 p__30996]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [duration source], :as player} [position]])), :doc "Jumps to a given position (in seconds)."}, handle-blink {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 178, :column 7, :end-line 178, :end-column 19, :arglists (quote ([player [cursor-on?]])), :doc "Shows or hides the cursor block."}, :name asciinema.player.core/handle-blink, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 19, :method-params ([player p__31030]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player [cursor-on?]])), :doc "Shows or hides the cursor block."}, parse-json-poster {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 19, :column 7, :end-line 19, :end-column 24, :arglists (quote ([poster]))}, :name asciinema.player.core/parse-json-poster, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 24, :method-params ([poster]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([poster]))}, event-handlers {:name asciinema.player.core/event-handlers, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 200, :column 1, :end-line 200, :end-column 20, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 200, :column 6, :end-line 200, :end-column 20}}, handle-rewind {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 128, :column 7, :end-line 128, :end-column 20, :arglists (quote ([{:keys [current-time duration source], :as player}])), :doc "Rewinds the playback by 5 seconds."}, :name asciinema.player.core/handle-rewind, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 20, :method-params ([p__31004]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 128, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [current-time duration source], :as player}])), :doc "Rewinds the playback by 5 seconds."}, blinks {:name asciinema.player.core/blinks, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 85, :column 1, :end-line 85, :end-column 12, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 85, :column 6, :end-line 85, :end-column 12}, :doc "Infinite seq of cursor blinks."}, update-screen {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 76, :column 7, :end-line 76, :end-column 20, :arglists (quote ([player screen])), :doc "Extracts screen state (line content and cursor attributes) from given payload\n  (a ref, possibly a delay) and applies it to player."}, :name asciinema.player.core/update-screen, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 20, :method-params ([player screen]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player screen])), :doc "Extracts screen state (line content and cursor attributes) from given payload\n  (a ref, possibly a delay) and applies it to player."}, handle-fast-forward {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 136, :column 7, :end-line 136, :end-column 26, :arglists (quote ([{:keys [current-time duration source], :as player}])), :doc "Fast-forwards the playback by 5 seconds."}, :name asciinema.player.core/handle-fast-forward, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 26, :method-params ([p__31010]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [current-time duration source], :as player}])), :doc "Fast-forwards the playback by 5 seconds."}, start-event-loop! {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 246, :column 7, :end-line 246, :end-column 24, :arglists (quote ([player-atom])), :doc "Starts event processing loop. It handles both internal and user triggered\n  events. Updates Reagent atom with the result of event handler."}, :name asciinema.player.core/start-event-loop!, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 24, :method-params ([player-atom]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 246, :end-line 246, :max-fixed-arity 1, :fn-var true, :arglists (quote ([player-atom])), :doc "Starts event processing loop. It handles both internal and user triggered\n  events. Updates Reagent atom with the result of event handler."}, speed-down {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 147, :column 7, :end-line 147, :end-column 17, :arglists (quote ([speed]))}, :name asciinema.player.core/speed-down, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 17, :method-params ([speed]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 147, :max-fixed-arity 1, :fn-var true, :arglists (quote ([speed]))}, handle-speed-change {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 150, :column 7, :end-line 150, :end-column 26, :arglists (quote ([change-fn {:keys [playing speed source], :as player}])), :doc "Alters the speed of the playback to the result of applying change-fn to the\n  current speed."}, :name asciinema.player.core/handle-speed-change, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 26, :method-params ([change-fn p__31016]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 150, :end-line 150, :max-fixed-arity 2, :fn-var true, :arglists (quote ([change-fn {:keys [playing speed source], :as player}])), :doc "Alters the speed of the playback to the result of applying change-fn to the\n  current speed."}, parse-poster {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 32, :column 7, :end-line 32, :end-column 19, :arglists (quote ([poster width height]))}, :name asciinema.player.core/parse-poster, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 19, :method-params ([poster width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 3, :fn-var true, :arglists (quote ([poster width height]))}, handle-playing {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 170, :column 7, :end-line 170, :end-column 21, :arglists (quote ([player [playing?]])), :doc "Toggle the play/pause button and start/stops cursor blinking."}, :name asciinema.player.core/handle-playing, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 21, :method-params ([player p__31027]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player [playing?]])), :doc "Toggle the play/pause button and start/stops cursor blinking."}, handle-screen {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 158, :column 7, :end-line 158, :end-column 20, :arglists (quote ([player [screen]])), :doc "Updates screen with given lines/cursor and resets cursor blinking."}, :name asciinema.player.core/handle-screen, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 20, :method-params ([player p__31021]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player [screen]])), :doc "Updates screen with given lines/cursor and resets cursor blinking."}, create-player {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 275, :column 7, :end-line 275, :end-column 20, :arglists (quote ([dom-node url options])), :doc "Creates the player with the state built from given options by starting event\n  processing loop and mounting Reagent component in DOM."}, :name asciinema.player.core/create-player, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 20, :method-params ([dom-node url options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 275, :end-line 275, :max-fixed-arity 3, :fn-var true, :arglists (quote ([dom-node url options])), :doc "Creates the player with the state built from given options by starting event\n  processing loop and mounting Reagent component in DOM."}, handle-size {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 193, :column 7, :end-line 193, :end-column 18, :arglists (quote ([{player-width :width, player-height :height, :as player} [width height]])), :doc "Sets player's width and height if not already set."}, :name asciinema.player.core/handle-size, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 18, :method-params ([p__31039 p__31040]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 193, :end-line 193, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{player-width :width, player-height :height, :as player} [width height]])), :doc "Sets player's width and height if not already set."}, dispatch {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 73, :column 7, :end-line 73, :end-column 15, :arglists (quote ([player event]))}, :name asciinema.player.core/dispatch, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 15, :method-params ([player event]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player event]))}, start-blinking {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 89, :column 7, :end-line 89, :end-column 21, :arglists (quote ([{:keys [events-ch], :as player}]))}, :name asciinema.player.core/start-blinking, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 21, :method-params ([p__30975]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 89, :end-line 89, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [events-ch], :as player}]))}, make-player {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 40, :column 7, :end-line 40, :end-column 18, :arglists (quote ([url {:keys [type width height speed loop auto-play preload poster font-size theme start-at], :or {type :asciicast, speed 1, font-size "small", theme "asciinema"}, :as options}])), :doc "Builds initial player for given URL and options."}, :name asciinema.player.core/make-player, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 18, :method-params ([url p__30962]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url {:keys [type width height speed loop auto-play preload poster font-size theme start-at], :or {type :asciicast, speed 1, font-size "small", theme "asciinema"}, :as options}])), :doc "Builds initial player for given URL and options."}, new-start-at {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 123, :column 7, :end-line 123, :end-column 19, :arglists (quote ([current-time total-time offset])), :doc "Returns time adjusted by given offset, clipped to the range 0..total-time."}, :name asciinema.player.core/new-start-at, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 19, :method-params ([current-time total-time offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 3, :fn-var true, :arglists (quote ([current-time total-time offset])), :doc "Returns time adjusted by given offset, clipped to the range 0..total-time."}, make-player-ratom {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 68, :column 7, :end-line 68, :end-column 24, :arglists (quote ([& args])), :doc "Returns Reagent atom with initial player state.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name asciinema.player.core/make-player-ratom, :variadic true, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 24, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 0, :fn-var true, :arglists ([& args]), :doc "Returns Reagent atom with initial player state."}, process-event {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 214, :column 7, :end-line 214, :end-column 20, :arglists (quote ([player [event-name & args]])), :doc "Finds handler for the given event and applies it to the player."}, :name asciinema.player.core/process-event, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 20, :method-params ([player p__31047]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 214, :end-line 214, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player [event-name & args]])), :doc "Finds handler for the given event and applies it to the player."}, handle-time {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 183, :column 7, :end-line 183, :end-column 18, :arglists (quote ([player [t]])), :doc "Updates player's current time (as displayed in control bar)."}, :name asciinema.player.core/handle-time, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 18, :method-params ([player p__31033]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player [t]])), :doc "Updates player's current time (as displayed in control bar)."}, parse-text-poster {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 26, :column 7, :end-line 26, :end-column 24, :arglists (quote ([text width height]))}, :name asciinema.player.core/parse-text-poster, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 24, :method-params ([text width height]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 3, :fn-var true, :arglists (quote ([text width height]))}, handle-loading {:protocol-inline nil, :meta {:file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :line 165, :column 7, :end-line 165, :end-column 21, :arglists (quote ([player [loading?]])), :doc "Shows/hides loading indicator."}, :name asciinema.player.core/handle-loading, :variadic false, :file "/Users/sickill/code/asciinema/asciinema-player/src/asciinema/player/core.cljs", :end-column 21, :method-params ([player p__31024]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 165, :end-line 165, :max-fixed-arity 2, :fn-var true, :arglists (quote ([player [loading?]])), :doc "Shows/hides loading indicator."}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:current-time :fast-forward :blink :screen :asciicast :else :font-size :speed :show-hud :start-at :speed-down :events-ch :time :loaded :width :lines :cursor :recur :type :duration :source :rewind :cursor-blink-ch :size :title :loop :author-img-url :theme :author :preload :poster :auto-play :loading :author-url :playing :on :toggle-play :mouse-move :seek :visible :keywordize-keys :speed-up :height}, :order [:keywordize-keys :lines :height :font-size :speed :start-at :width :type :asciicast :loop :theme :poster :preload :auto-play :current-time :show-hud :events-ch :loaded :cursor :duration :source :cursor-blink-ch :loading :playing :visible :title :author :author-url :author-img-url :blink :on :fast-forward :screen :speed-down :time :rewind :size :toggle-play :seek :speed-up :recur :else :mouse-move]}, :doc nil}